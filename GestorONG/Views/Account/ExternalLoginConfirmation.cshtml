@model GestorONG.ViewModel.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Completar perfil";
}

<h2>Asocia tu cuenta de @ViewBag.LoginProvider en la aplicación.</h2>

@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row intro-text-external-login">
        <p class="col-xs-12 text-info lead text-justify">
            Te has autenticado correctamente con <strong>@ViewBag.LoginProvider</strong>.
            Por favor, introduce un nombre de usuario y tu correo electrónico para completar el perfil de la aplicación (sólo tendrás que completar estos datos una vez).
        </p>
    </div>
    <div class="row fila-form">
        <div class="form-group col-xs-12 col-md-6">
            @Html.LabelFor(m => m.Email, new { @class = "control-label col-xs-12 col-md-4" })
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control col-xs-12 col-md-8" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger col-xs-12 text-center" })
        </div>
        <div class="form-group col-xs-12 col-md-6">
            @Html.LabelFor(m => m.UserName, new { @class = "control-label col-xs-12 col-md-4" })
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control col-xs-12 col-md-8" })
            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger col-xs-12 text-center" })
        </div>
    </div>
    <div class="row botones-formulario">
        <div class="form-group col-xs-12 col-md-12">
            <div class="col-xs-12 col-md-12 text-center">
                <input type="submit" class="btn btn-outline-danger" value="Guardar cambios" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

