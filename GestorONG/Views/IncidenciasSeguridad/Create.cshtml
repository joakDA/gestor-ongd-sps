@model GestorONG.DataModel.incidenciasSeguridad

@{
    ViewBag.Title = "Registrar Incidencia de Seguridad";

    if (TempData["Acierto"] != null)
    {
        <div class="alert alert-success fade in">
            <a href="#" class="close" data-dismiss="alert">&times;</a>
            <p class="text-center"><span class="glyphicon glyphicon-exclamation-sign"></span> @TempData["Acierto"]</p>
        </div>
    }
    if (TempData["Error"] != null)
    {
        <div class="alert alert-danger fade in">
            <a href="#" class="close" data-dismiss="alert">&times;</a>
            <p class="text-center"><span class="glyphicon glyphicon-exclamation-sign"></span> @TempData["Error"]</p>

        </div>
    }
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row fila-form">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group col-xs-12 col-md-6 dates-row">
                @Html.LabelFor(model => model.fechaIncidencia, htmlAttributes: new { @class = "control-label col-xs-12" })
                @Html.EditorFor(model => model.fechaIncidencia, new { htmlAttributes = new { @class = "form-control col-xs-12 col-md-11", data_toggle = "datetimepicker", data_target = "#fechaIncidencia" } })
                <div class="input-group-append" data-target="#fechaIncidencia" data-toggle="datetimepicker">
                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                </div>
                @Html.ValidationMessageFor(model => model.fechaIncidencia, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>

            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.idTipoIncidencia, htmlAttributes: new { @class = "control-label col-xs-12" })
                @Html.DropDownListFor(model => model.idTipoIncidencia, (IEnumerable<SelectListItem>)ViewBag.TiposIncidencia, new { @class = "form-control selectpicker" })
                @Html.ValidationMessageFor(model => model.idTipoIncidencia, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>
        </div>
        <div class="row fila-form">
            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-xs-12" })
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control col-xs-12" } })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>

            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.efectosDerivados, htmlAttributes: new { @class = "control-label col-xs-12" })
                @Html.EditorFor(model => model.efectosDerivados, new { htmlAttributes = new { @class = "form-control col-xs-12" } })
                @Html.ValidationMessageFor(model => model.efectosDerivados, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>
        </div>
        <div class="row fila-form">
            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.medidasCorrectoras, htmlAttributes: new { @class = "control-label col-xs-12" })
                @Html.EditorFor(model => model.medidasCorrectoras, new { htmlAttributes = new { @class = "form-control col-xs-12" } })
                @Html.ValidationMessageFor(model => model.medidasCorrectoras, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>
            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.idComunicante, htmlAttributes: new { @class = "control-label col-xs-12" })
                @Html.DropDownListFor(model => model.idComunicante, (IEnumerable<SelectListItem>)ViewBag.Usuarios, new { @class = "form-control selectpicker" })
                @Html.ValidationMessageFor(model => model.idComunicante, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>
        </div>
        <div class="row fila-form">
            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.idReceptor, htmlAttributes: new { @class = "control-label col-xs-12" })
                @Html.DropDownListFor(model => model.idReceptor, (IEnumerable<SelectListItem>)ViewBag.Usuarios, new { @class = "form-control selectpicker" })
                @Html.ValidationMessageFor(model => model.idReceptor, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>
        </div>

        <div class="row botones-formulario">
            <div class="form-group col-xs-12 col-md-12">
                <div class="col-xs-12 col-md-12 text-center">
                    <input type="submit" value="Guardar" class="btn btn-outline-success" />
                    @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-outline-danger" })
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/momentJS")
    @Scripts.Render("~/bundles/CustomJS")
    @Scripts.Render("~/bundles/boostrapSelectJS")
    @Scripts.Render("~/bundles/BootstrapDatetimePickerTDJS")

<script type="text/javascript">

    $(document).ready(function () {
            InitializeDatepickers();
        });

        /*
* Initialize datepickers depending the language.
*/
    function InitializeDatepickers() {

        $.fn.datetimepicker.Constructor.Default = $.extend({}, $.fn.datetimepicker.Constructor.Default, {
            icons: {
                time: 'fas fa-clock',
                date: 'fas fa-calendar',
                up: 'fas fa-arrow-up',
                down: 'fas fa-arrow-down',
                previous: 'fas fa-chevron-left',
                next: 'fas fa-chevron-right',
                today: 'fas fa-calendar-check-o',
                clear: 'fas fa-trash',
                close: 'fas fa-times'
            }
        });

            var aux = null;
            var format = '';
            var picker = null;
            var date = null;
            var locale = '';

            format = 'DD/MM/YYYY  HH:mm:ss.SSS';
            locale = 'es';

            picker = $('#fechaIncidencia');
            date = moment(picker.val(), format).toDate();
            picker.datetimepicker({ format: format, locale: locale });
            picker.datetimepicker({ 'date': date });
        }

        $(function () {
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, "DD/MM/YYYY  HH:mm:ss.SSS", true).isValid();
            }
        });
</script>
}

@section Styles{
    @Styles.Render("~/bundles/BootstrapDatetimePickerTDCSS")
}
