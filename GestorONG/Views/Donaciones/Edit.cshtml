@model GestorONG.ViewModel.DonacionesViewModel

@{
    ViewBag.Title = "Editar una Donación";

    if (TempData["Acierto"] != null)
    {
        <div class="alert alert-success fade in">
            <a href="#" class="close" data-dismiss="alert">&times;</a>
            <p class="text-center"><span class="glyphicon glyphicon-exclamation-sign"></span> @TempData["Acierto"]</p>
        </div>
    }
    if (TempData["Error"] != null)
    {
        <div class="alert alert-danger fade in">
            <a href="#" class="close" data-dismiss="alert">&times;</a>
            <p class="text-center"><span class="glyphicon glyphicon-exclamation-sign"></span> @TempData["Error"]</p>

        </div>
    }
}
}

<h1 class="titulo-pagina text-center">Editar la Donación del Colaborador @Html.DisplayFor(model => model.donacion.colaboradores.nombre) @Html.DisplayFor(model => model.donacion.colaboradores.apellidos)</h1>


@using (Html.BeginForm(null, null, new { @id = string.Empty }, FormMethod.Post,
                new { @id = "editarDonacion" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.donacion.id)

        <div class="row fila-form">
            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.donacion.cantidad, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.EditorFor(model => model.donacion.cantidad, new { htmlAttributes = new { @class = "form-control col-xs-12 col-md-8" } })
                @Html.ValidationMessageFor(model => model.donacion.cantidad, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>

            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.donacion.fechaAlta, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.EditorFor(model => model.donacion.fechaAlta, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control col-xs-12 col-md-8", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.donacion.fechaAlta, "", new { @class = "text-danger col-xs-12 text-center" })

            </div>
        </div>

        <div class="row fila-form">
            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.donacion.idColaborador, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.HiddenFor(model => model.donacion.idColaborador)
                <span class="nombre-colaborador col-xs-12 col-md-8">@ViewBag.colaborador</span>
                @Html.ValidationMessageFor(model => model.donacion.idColaborador, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>

            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.donacion.idPeriodicidad, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.DropDownListFor(model => model.donacion.idPeriodicidad, ViewBag.idPeriodicidad as IEnumerable<SelectListItem>, new { @class = "form-control selectpicker col-xs-12 col-md-8" })
                @Html.ValidationMessageFor(model => model.donacion.idPeriodicidad, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>
        </div>

        <div class="row fila-form">
            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.NIF, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.EditorFor(model => model.NIF, new { htmlAttributes = new { @class = "form-control col-xs-12 col-md-8", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.NIF, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>

            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.cuentaBancaria, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.EditorFor(model => model.cuentaBancaria, new { htmlAttributes = new { @class = "form-control col-xs-12 col-md-8", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.cuentaBancaria, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>
        </div>

        <div class="row botones-formulario">
            <div class="form-group col-xs-12">
                <div class="col-xs-12 text-center">
                    <input type="submit" value="Guardar" class="btn btn-primary" />
                    @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/boostrapSelectJS")
    <script type="text/javascript">
        $("#editarDonacion").validate({
            ignore: "#fechaAlta"
        });
    </script>
}
