@model GestorONG.ViewModel.DonacionesViewModel

@{
    ViewBag.Title = "Crear Nueva Donación";
}

<h1 class="titulo-pagina text-center">Crear Nueva Donación</h1>


@using (Html.BeginForm(null, null, new { @id = string.Empty }, FormMethod.Post,
                new { @id = "nuevaDonacion" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row fila-form">
            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.donacion.cantidad, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.EditorFor(model => model.donacion.cantidad, new { htmlAttributes = new { @class = "form-control col-xs-12 col-md-8" } })
                @Html.ValidationMessageFor(model => model.donacion.cantidad, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>

            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.donacion.fechaAlta, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.EditorFor(model => model.donacion.fechaAlta, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control col-xs-12 col-md-8 date-picker", @type = "datetime" } })
                @Html.ValidationMessageFor(model => model.donacion.fechaAlta, "", new { @class = "text-danger col-xs-12 text-center" })

            </div>
        </div>
        <div class="row fila-form">
            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.donacion.idColaborador, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.DropDownListFor(model => model.donacion.idColaborador, ViewBag.idColaborador as IEnumerable<SelectListItem>, new { @class = "form-control selectpicker col-xs-12 col-md-8" })
                @Html.ValidationMessageFor(model => model.donacion.idColaborador, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>

            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.donacion.idPeriodicidad, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.DropDownListFor(model => model.donacion.idPeriodicidad,ViewBag.idPeriodicidad as IEnumerable<SelectListItem>, new { @class = "form-control selectpicker col-xs-12 col-md-8" })
                @Html.ValidationMessageFor(model => model.donacion.idPeriodicidad, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>
        </div>

        <div class="row fila-form">
            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.NIF, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.EditorFor(model => model.NIF, new { htmlAttributes = new { @class = "form-control col-xs-12 col-md-8" } })
                @Html.ValidationMessageFor(model => model.NIF, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>

            <div class="form-group col-xs-12 col-md-6">
                @Html.LabelFor(model => model.cuentaBancaria, htmlAttributes: new { @class = "control-label col-xs-12 col-md-4" })
                @Html.EditorFor(model => model.cuentaBancaria, new { htmlAttributes = new { @class = "form-control col-xs-12 col-md-8" } })
                @Html.ValidationMessageFor(model => model.cuentaBancaria, "", new { @class = "text-danger col-xs-12 text-center" })
            </div>
        </div>

        <div class="row botones-formulario">
            <div class="form-group col-xs-12">
                <div class="col-xs-12 text-center">
                    <input type="submit" value="Guardar" class="btn btn-primary" />
                    @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryUI")
    @Scripts.Render("~/bundles/boostrapSelectJS")

    <script type="text/javascript">
        $(document).ready(function () {

        })
        $("#nuevaDonacion").validate({
            ignore: "#fechaAlta"
        });
        $(function () {
            $.datepicker.regional['es'] = {
                closeText: 'Cerrar',
                prevText: '< Ant',
                nextText: 'Sig >',
                currentText: 'Hoy',
                monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
                dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
                dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Juv', 'Vie', 'Sáb'],
                dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
                weekHeader: 'Sm',
                dateFormat: 'dd-MM-yy',
                firstDay: 1,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: ''
            };
            $.datepicker.setDefaults($.datepicker.regional['es']);
            // This will make every element with the class "date-picker" into a DatePicker element
            $('.date-picker').datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+0"
            });
        })
    </script>
}
